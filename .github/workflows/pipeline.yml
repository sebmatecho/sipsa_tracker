name: SIPSA Data Pipeline CI/CD

# Trigger on push to any branch and also on a schedule (daily at midnight UTC)
on:
  push:
    branches:
      - '**'  # Trigger on push to any branch
  schedule:
    - cron: '0 0 * * *'  # Also trigger daily at midnight UTC

jobs:
  # Continuous Integration (CI): Test the code
  ci:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Python environment
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Step 3: Install dependencies from requirements.txt
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
    
    # Step 4: Run tests using pytest (CI step)
    - name: Run tests
      run: |
        source venv/bin/activate
        pytest tests/

  # Continuous Deployment (CD): Run the pipeline if CI is successful
  cd:
    needs: ci  # Ensures that the CD job runs only if the CI job is successful
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Set up Python environment
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Step 3: Install dependencies from requirements.txt
    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    # Step 4: Run the Python script (deploy step)
    - name: Run SIPSA Data Pipeline
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        TABLE_NAME: ${{ secrets.TABLE_NAME }}
      run: |
        source venv/bin/activate
        python main.py

    # Optional Step 5: Upload logs or send notifications (if required)
    - name: Upload logs
      run: |
        echo "Logs uploaded"
